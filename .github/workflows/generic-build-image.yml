name: Build Docker Image

on:
  workflow_call:
    inputs:
      REPOSITORY:
        required: true
        type: string
      VERSION:
        required: true
        type: string
      SERVICE_ROLE:
        required: true
        type: string
    outputs:
      image:
        description: "The image that was built and pushed to ECR"
        value: ${{ jobs.start.outputs.image }}
jobs:
  start:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    outputs:
      image: ${{ steps.build-image.outputs.image }}

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.SERVICE_ROLE }}
          aws-region: us-east-1
          mask-aws-account-id: 'no'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ inputs.REPOSITORY }}
          VERSION: ${{ inputs.VERSION }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$VERSION -t $REGISTRY/$REPOSITORY:latest -f Dockerfile.prod .
          docker push -a $REGISTRY/$REPOSITORY
          echo "image=$REGISTRY/$REPOSITORY:$VERSION" >> $GITHUB_OUTPUT
